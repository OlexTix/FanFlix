version: '3.9'

name: fanflix

services:
  api:
    image: ${DOCKERHUB_USERNAME}/fanflix-api:latest
    container_name: fanflix-api
    restart: unless-stopped
    networks:
      - traefik-global-proxy
    environment:
      DATABASE_USER_NAME: ${DATABASE_USER_NAME}
      DATABASE_HOST_NAME: ${DATABASE_HOST_NAME}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_LINK: ${DATABASE_LINK}
      API_SECRET: ${API_SECRET}
      TOKEN_EXPIRATION: ${TOKEN_EXPIRATION} 
      NODE_ENV: production
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "traefik.enable=true"
      - "traefik.http.routers.fanflix-api.rule=Host(`api.fanflix.${MY_DOMAIN}`)"
      - "traefik.http.routers.fanflix-api.entrypoints=websecure"
      - "traefik.http.routers.fanflix-api.tls.certresolver=letsencrypt"
      - "traefik.http.services.fanflix-api.loadbalancer.server.port=3000"

  db:
    image: postgres:latest
    container_name: fanflix-db
    restart: always
    environment:
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_USER: ${DATABASE_USER_NAME}
      POSTGRES_DB: ${DATABASE_NAME}
    networks:
      - traefik-global-proxy
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "traefik.enable=true"
      - "traefik.http.routers.fanflix-db.rule=Host(`db.fanflix.${MY_DOMAIN}`)"
      - "traefik.http.routers.fanflix-db.entrypoints=websecure"
      - "traefik.http.routers.fanflix-db.tls.certresolver=letsencrypt"
      - "traefik.http.services.fanflix-db.loadbalancer.server.port=${DATABASE_PORT}"

networks:
  traefik-global-proxy:
    external: true