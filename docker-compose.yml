version: '3.9'

name: fanflix

services:

  front:
    image: ${DOCKERHUB_USERNAME}/fanflix-front:latest
    container_name: fanflix-front
    restart: unless-stopped
    networks:
      - traefik-global-proxy
      - internal
    environment:
      DATABASE_USER_NAME: ${DATABASE_USER_NAME}
      DATABASE_HOST_NAME: ${DATABASE_HOST_NAME}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_PORT: ${DATABASE_PORT}
      API_SECRET: ${API_SECRET}
      TOKEN_EXPIRATION: ${TOKEN_EXPIRATION} 
      NODE_ENV: production
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "traefik.enable=true"
      - "traefik.http.routers.fanflix-front.rule=Host(`fanflix.${MY_DOMAIN}`)"
      - "traefik.http.routers.fanflix-front.entrypoints=websecure"
      - "traefik.http.routers.fanflix-front.tls.certresolver=letsencrypt"
      - "traefik.http.services.fanflix-front.loadbalancer.server.port=80"
  api:
    image: ${DOCKERHUB_USERNAME}/fanflix-api:latest
    container_name: fanflix-api
    restart: unless-stopped
    networks:
      - traefik-global-proxy
      - internal
    environment:
      DATABASE_USER_NAME: ${DATABASE_USER_NAME}
      DATABASE_HOST_NAME: ${DATABASE_HOST_NAME}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_PORT: ${DATABASE_PORT}
      API_SECRET: ${API_SECRET}
      TOKEN_EXPIRATION: ${TOKEN_EXPIRATION} 
      NODE_ENV: production
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "traefik.enable=true"
      - "traefik.http.routers.fanflix-api.rule=Host(`api.fanflix.${MY_DOMAIN}`)"
      - "traefik.http.routers.fanflix-api.entrypoints=websecure"
      - "traefik.http.routers.fanflix-api.tls.certresolver=letsencrypt"
      - "traefik.http.services.fanflix-api.loadbalancer.server.port=3000"

  db:
    image: postgres:latest
    container_name: fanflix-db
    restart: always
    environment:
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_USER: ${DATABASE_USER_NAME}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - ./postgres:/var/lib/postgresql/data
    networks:
      - internal

  docs:
    image: ${DOCKERHUB_USERNAME}/fanflix-docs:latest
    container_name: fanflix-docs
    restart: unless-stopped
    networks:
      - traefik-global-proxy
      - internal
    environment:
      NODE_ENV: production
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "traefik.enable=true"
      - "traefik.http.routers.fanflix-docs.rule=Host(`docs.fanflix.${MY_DOMAIN}`)"
      - "traefik.http.routers.fanflix-docs.entrypoints=websecure"
      - "traefik.http.routers.fanflix-docs.tls.certresolver=letsencrypt"
      - "traefik.http.services.fanflix-docs.loadbalancer.server.port=80"

  adminer:
    image: adminer:latest
    container_name: fanflix-adminer
    restart: unless-stopped
    networks:
      - traefik-global-proxy
      - internal
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fanflix-adminer.rule=Host(`db.fanflix.${MY_DOMAIN}`)"
      - "traefik.http.routers.fanflix-adminer.entrypoints=websecure"
      - "traefik.http.routers.fanflix-adminer.tls.certresolver=letsencrypt"
      - "traefik.http.services.fanflix-adminer.loadbalancer.server.port=8080"
      
networks:
  traefik-global-proxy:
    external: true
  internal:
    driver: bridge